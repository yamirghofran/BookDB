/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LibraryImport } from './routes/library'
import { Route as ForYouImport } from './routes/for-you'
import { Route as IndexImport } from './routes/index'
import { Route as PeopleIdImport } from './routes/people.$id'
import { Route as DemoTanstackQueryImport } from './routes/demo.tanstack-query'
import { Route as BooksIdImport } from './routes/books.$id'

// Create/Update Routes

const LibraryRoute = LibraryImport.update({
  id: '/library',
  path: '/library',
  getParentRoute: () => rootRoute,
} as any)

const ForYouRoute = ForYouImport.update({
  id: '/for-you',
  path: '/for-you',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PeopleIdRoute = PeopleIdImport.update({
  id: '/people/$id',
  path: '/people/$id',
  getParentRoute: () => rootRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

const BooksIdRoute = BooksIdImport.update({
  id: '/books/$id',
  path: '/books/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/for-you': {
      id: '/for-you'
      path: '/for-you'
      fullPath: '/for-you'
      preLoaderRoute: typeof ForYouImport
      parentRoute: typeof rootRoute
    }
    '/library': {
      id: '/library'
      path: '/library'
      fullPath: '/library'
      preLoaderRoute: typeof LibraryImport
      parentRoute: typeof rootRoute
    }
    '/books/$id': {
      id: '/books/$id'
      path: '/books/$id'
      fullPath: '/books/$id'
      preLoaderRoute: typeof BooksIdImport
      parentRoute: typeof rootRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
    '/people/$id': {
      id: '/people/$id'
      path: '/people/$id'
      fullPath: '/people/$id'
      preLoaderRoute: typeof PeopleIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/for-you': typeof ForYouRoute
  '/library': typeof LibraryRoute
  '/books/$id': typeof BooksIdRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/people/$id': typeof PeopleIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/for-you': typeof ForYouRoute
  '/library': typeof LibraryRoute
  '/books/$id': typeof BooksIdRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/people/$id': typeof PeopleIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/for-you': typeof ForYouRoute
  '/library': typeof LibraryRoute
  '/books/$id': typeof BooksIdRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/people/$id': typeof PeopleIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/for-you'
    | '/library'
    | '/books/$id'
    | '/demo/tanstack-query'
    | '/people/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/for-you'
    | '/library'
    | '/books/$id'
    | '/demo/tanstack-query'
    | '/people/$id'
  id:
    | '__root__'
    | '/'
    | '/for-you'
    | '/library'
    | '/books/$id'
    | '/demo/tanstack-query'
    | '/people/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ForYouRoute: typeof ForYouRoute
  LibraryRoute: typeof LibraryRoute
  BooksIdRoute: typeof BooksIdRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  PeopleIdRoute: typeof PeopleIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ForYouRoute: ForYouRoute,
  LibraryRoute: LibraryRoute,
  BooksIdRoute: BooksIdRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  PeopleIdRoute: PeopleIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/for-you",
        "/library",
        "/books/$id",
        "/demo/tanstack-query",
        "/people/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/for-you": {
      "filePath": "for-you.tsx"
    },
    "/library": {
      "filePath": "library.tsx"
    },
    "/books/$id": {
      "filePath": "books.$id.tsx"
    },
    "/demo/tanstack-query": {
      "filePath": "demo.tanstack-query.tsx"
    },
    "/people/$id": {
      "filePath": "people.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
