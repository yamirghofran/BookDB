# Frontend nginx configuration for BookDB
# This configuration serves the frontend and proxies requests to backend and Qdrant

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Compression settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types application/json application/javascript text/plain text/css application/xml;

    # Main server block
    server {
        listen 80;
        server_name ${VIRTUAL_HOST:-localhost};
        
        # Increase request size for large vector operations
        client_max_body_size 100M;
        
        # Add debugging header to track request processing
        add_header X-Debug-Path $uri always;

        # Health check endpoint for frontend
        location /health {
            access_log off;
            add_header Content-Type application/json;
            return 200 '{"status": "ok", "message": "Frontend is running", "timestamp": "$time_iso8601"}';
        }
        
        # Backend health check pass-through
        location /api/health {
            # No rewrite needed, the backend expects /api/health
            proxy_pass http://${BACKEND_SERVICE}:8080;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            access_log off;
        }

        # API endpoints go to the backend service
        location /api/ {
            # Important: No trailing slash in proxy_pass to preserve URI path
            proxy_pass http://${BACKEND_SERVICE}:8080;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add security headers
            proxy_hide_header X-Powered-By;
            add_header X-Content-Type-Options nosniff;
            
            # Handle connection issues with increased timeouts
            proxy_connect_timeout 60s;
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;
            
            # Allow for WebSockets if needed
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Add debugging headers
            add_header X-Forwarded-Prefix /api;
            add_header X-Debug-Backend-Service "${BACKEND_SERVICE}";
        }

        # Qdrant API endpoints (direct access to Qdrant API)
        location /qdrant/ {
            # Direct proxy to Qdrant service
            proxy_pass http://${QDRANT_SERVICE}:6333/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Required for WebSocket support in dashboard
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Add security headers
            proxy_hide_header X-Powered-By;
            add_header X-Content-Type-Options nosniff;
            
            # Handle connection issues with increased timeouts for vector operations
            proxy_connect_timeout 30s;
            proxy_read_timeout 90s;
            
            # Add CORS headers for API access
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;
            
            # Set proper error handling
            error_page 404 502 503 504 = @qdrant_api_fallback;
        }
        
        # Simple redirect for /qdrant/dashboard with or without trailing slash
        location ~ ^/qdrant/dashboard$ {
            return 301 $scheme://$host/qdrant/dashboard/;
        }
        
        # Handle the Qdrant dashboard
        location /qdrant/dashboard/ {
            proxy_pass http://${QDRANT_SERVICE}:6333/dashboard/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # Required for WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Critical content rewriting
            sub_filter_types text/html application/javascript;
            sub_filter_once off;
            
            # URL Rewrites
            sub_filter '="/dashboard/' '="/qdrant/dashboard/';
            sub_filter '="/_app/' '="/qdrant/dashboard/_app/';
            sub_filter 'http://localhost:6333' '$scheme://$host/qdrant';
            sub_filter 'ws://localhost:6333' 'ws://$host/qdrant';
            
            # Cache control for dynamic content
            add_header Cache-Control "no-cache, must-revalidate";
            expires off;
        }
        
        # Static Assets Handling
        location ~ ^/qdrant/dashboard/(.*\.(js|css|png|ico))$ {
            proxy_pass http://${QDRANT_SERVICE}:6333/dashboard/$1;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            
            # Long cache for versioned assets
            if ($request_uri ~* \.[a-f0-9]{8}\.(js|css)$) {
                add_header Cache-Control "public, max-age=31536000";
            }
            
            access_log off;
        }
        
        # WebSocket Upgrade Handling for collections endpoint
        location /qdrant/collections {
            proxy_pass http://${QDRANT_SERVICE}:6333/collections;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # Fallback for Qdrant API endpoints
        location @qdrant_api_fallback {
            add_header Content-Type "application/json" always;
            return 200 '{"status":"ok","result":{}}';
        }
        
        # Static files from the React app
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "public, max-age=3600";
        }
    }
}
