services:
  # Frontend service with nginx
  frontend:
    build:
      context: ./website/frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - frontend-network
      - cloudflared
      - backend-network # Added access to backend network
    # For Nginx proxy manager access:
    environment:
      - BACKEND_SERVICE=backend
      - QDRANT_SERVICE=qdrant
      - VIRTUAL_HOST=${DOMAIN:-localhost}
      - VIRTUAL_PORT=80
    # Backend Go service
  backend:
    build:
      context: ./website/backend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-bookdb}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-bookdb_password}
      - DB_NAME=${POSTGRES_DB:-bookdb}
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
    depends_on:
      - postgres
      - qdrant
    networks:
      - backend-network
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 15s

  # PostgreSQL database
  postgres:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-minimal.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-bookdb}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-bookdb_password}
      - POSTGRES_DB=${POSTGRES_DB:-bookdb}
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-bookdb}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  # Qdrant vector database
  qdrant:
    image: qdrant/qdrant:latest
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped
    networks:
      - backend-network
    # Set healthcheck for service dependency management
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:6333/healthz" ]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
    driver: local
  qdrant_data:
    driver: local

networks:
  cloudflared:
    external: true
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge
    internal: true # Only containers attached to this network can communicate
